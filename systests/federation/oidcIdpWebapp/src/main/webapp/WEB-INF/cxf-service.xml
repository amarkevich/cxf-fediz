<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:cxf="http://cxf.apache.org/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:sec="http://cxf.apache.org/configuration/security"
  xmlns:http="http://cxf.apache.org/transports/http/configuration"
  xmlns:jaxws="http://cxf.apache.org/jaxws"
  xmlns:jaxrs="http://cxf.apache.org/jaxrs"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
            http://cxf.apache.org/core
            http://cxf.apache.org/schemas/core.xsd
            http://cxf.apache.org/configuration/security
            http://cxf.apache.org/schemas/configuration/security.xsd
            http://cxf.apache.org/jaxws
            http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs
            http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/transports/http/configuration
            http://cxf.apache.org/schemas/configuration/http-conf.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/util         
            http://www.springframework.org/schema/util/spring-util.xsd">
   
   <import resource="classpath:META-INF/cxf/cxf.xml" />
   
   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>
   
   <!--cxf:bus>
        <cxf:features>
            <cxf:logging/>
        </cxf:features>
   </cxf:bus-->
   
   <bean id="callbackHandler" class="org.apache.cxf.fediz.oidc.idp.example.CommonCallbackHandler"/>
   <bean id="basicAuthFilter" class="org.apache.cxf.fediz.oidc.idp.example.BasicAuthFilter">
       <property name="callbackHandler" ref="callbackHandler"/>
   </bean>
   
   <bean id="client" class="org.apache.cxf.rs.security.oauth2.common.Client">
       <constructor-arg><value>consumer-id</value></constructor-arg>
       <constructor-arg><value>this-is-a-secret</value></constructor-arg>
       <constructor-arg><value>true</value></constructor-arg>
       <constructor-arg><value>Fediz IdP</value></constructor-arg>
       <property name="redirectUris">
           <util:list value-type="java.lang.String">
               <value>https://localhost:${idp.https.port}/fediz-idp/federation</value>
           </util:list>
       </property>
       <property name="allowedGrantTypes">
           <util:list value-type="java.lang.String">
               <value>authorization_code</value>
           </util:list>
       </property>
       <property name="registeredScopes">
           <util:list value-type="java.lang.String">
               <value>openid</value>
           </util:list>
       </property>
   </bean>
   
   <bean id="oauthProvider" class="org.apache.cxf.fediz.oidc.idp.example.EHCacheOIDCTokenProvider">
      <property name="client" ref="client"/>
   </bean>
   
   <bean id="authorizationService" class="org.apache.cxf.rs.security.oauth2.services.AuthorizationCodeGrantService">
      <property name="dataProvider" ref="oauthProvider"/>
   </bean>
   
   <bean id="idTokenProviderImpl" class="org.apache.cxf.fediz.oidc.idp.example.IdTokenProviderImpl"/>
   
   <bean id="idTokenFilter" class="org.apache.cxf.rs.security.oidc.idp.IdTokenResponseFilter">
       <property name="idTokenProvider" ref="idTokenProviderImpl"/>
   </bean>
   
   <bean id="tokenService" class="org.apache.cxf.rs.security.oauth2.services.AccessTokenService">
      <property name="dataProvider" ref="oauthProvider"/>
      <property name="responseFilter" ref="idTokenFilter"/>
   </bean>
   
   <bean id="oauthJSONProvider" class="org.apache.cxf.rs.security.oauth2.provider.OAuthJSONProvider"/>
   
   <bean id="viewProvider" class="org.apache.cxf.jaxrs.provider.RequestDispatcherProvider">
       <property name="useClassNames" value="true"/>
       <property name="locationPrefix" value="/WEB-INF/views/"/>
       <property name="beanName" value="data"/>
       <property name="dispatcherName" value="jsp"/>
   </bean>
    
   <jaxrs:server address="/services">
       <jaxrs:serviceBeans>
           <ref bean="authorizationService"/>
           <ref bean="tokenService"/>
       </jaxrs:serviceBeans>
       <jaxrs:providers>
           <ref bean="oauthJSONProvider"/>
           <ref bean="basicAuthFilter"/>
           <ref bean="viewProvider"/>
       </jaxrs:providers>
       <jaxrs:properties>
           <entry key="rs.security.keystore.type" value="jks" />
           <entry key="rs.security.keystore.alias" value="realmb"/>
           <entry key="rs.security.key.password" value="realmb"/>
           <entry key="rs.security.keystore.password" value="storepass"/>
           <entry key="rs.security.keystore.file" value="stsrealm_b.jks" />
           <entry key="rs.security.signature.algorithm" value="RS256" />
       </jaxrs:properties>
   </jaxrs:server>

</beans>

